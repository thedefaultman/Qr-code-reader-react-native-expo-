name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      run: npm ci

    - name: Setup Expo CLI (if needed)
      run: |
        if [ -f "app.json" ] || [ -f "app.config.js" ]; then
          echo "Expo project detected, installing Expo CLI"
          npm install -g @expo/cli
        fi

    - name: Generate native code (Expo prebuild)
      run: |
        if [ -f "app.json" ] || [ -f "app.config.js" ]; then
          echo "Running Expo prebuild to generate native Android code"
          if [ ! -d "android" ]; then
            echo "Android directory not found, running prebuild..."
            expo prebuild --platform android --non-interactive --no-install
            
            # Verify prebuild worked
            if [ ! -d "android" ]; then
              echo "Error: Prebuild failed to create android directory"
              exit 1
            fi
            echo "Prebuild completed successfully"
          else
            echo "Android folder already exists, skipping prebuild"
          fi
        else
          echo "Regular React Native project, native code should already exist"
          if [ ! -d "android" ]; then
            echo "Error: Neither Expo project nor React Native project with android folder found"
            exit 1
          fi
        fi

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make Gradlew executable
      run: cd android && chmod +x ./gradlew

    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleRelease



    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: android/app/build/outputs/apk/release/*.apk
        retention-days: 30


    - name: Upload artifacts to S3
      if: always()
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2
      run: |
        # Upload React Native builds and record usage
        if [ -d android/app/build/outputs/apk/release ]; then
          for apk in android/app/build/outputs/apk/release/*.apk; do
            if [ -f "$apk" ]; then
              FILE_SIZE=$(stat -c%s "$apk")
              FILENAME=$(basename "$apk")
              aws s3 cp "$apk" s3://mobile-latch/artifacts/${{ github.run_id }}/android/$FILENAME
              curl -X POST "${{ secrets.BACKEND_URL }}/api/storage-usage/record-from-workflow" \
                -H "Content-Type: application/json" \
                -H "x-github-run-id: ${{ github.run_id }}" \
                -H "x-github-repo: ${{ github.repository }}" \
                -d "{\"provider\": \"s3\", \"bucket\": \"mobile-latch\", \"path\": \"artifacts/${{ github.run_id }}/android/$FILENAME\", \"size\": $FILE_SIZE, \"artifactType\": \"apk\"}"
            fi
          done
        fi
        if [ -d ios/build ]; then
          tar -czf ios-build.tar.gz -C ios/build .
          FILE_SIZE=$(stat -c%s ios-build.tar.gz)
          aws s3 cp ios-build.tar.gz s3://mobile-latch/artifacts/${{ github.run_id }}/ios/ios-build.tar.gz
          curl -X POST "${{ secrets.BACKEND_URL }}/api/storage-usage/record-from-workflow" \
            -H "Content-Type: application/json" \
            -H "x-github-run-id: ${{ github.run_id }}" \
            -H "x-github-repo: ${{ github.repository }}" \
            -d "{\"provider\": \"s3\", \"bucket\": \"mobile-latch\", \"path\": \"artifacts/${{ github.run_id }}/ios/ios-build.tar.gz\", \"size\": $FILE_SIZE, \"artifactType\": \"ipa\"}"
        fi
        echo "Artifacts uploaded to s3://mobile-latch/artifacts/${{ github.run_id }}/"
